#include "Maze.h"
#include <iostream>
#include <fstream>

Maze::Maze() {
	/*
	maze.resize(41, vector<char>(25));

	FILE * txtFile;
	errno_t err;
	err = fopen_s(&txtFile,"PrizeMaze.txt", "r");

	if (txtFile == nullptr) {
		cout << "Text File cannot be opened! \n";
	}
	else {
		vector<char> bytes;

		int x = 0;
		int y = 0;
		int count = 0;
		char tempChar;
		while (!feof(txtFile)) {

			if (count == 1025) { break; }

			tempChar = getc(txtFile);

			if (tempChar != 'x' && ' ' && 'p' && '\n') {
				tempChar = '\x9C';
				maze[x][y] = tempChar;
			}
			else {
				maze[x][y] = tempChar;
			}

			if (x == 40) {
				x = 0;
				y++;
			}
			else { x++; }
			
			count++;
		}
		cout << count << "\n";
	}
	*/

	maze = { {'x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x',' ','\x9C',' ', ' ',' ',' ',' ', ' ',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x',' ','x','x','x','x','x','x',' ','\x9C',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\x9C',' ','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x',' ','x','x','x','x','x','x','x','\x9C','x','x','x','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x',' ','x','x','x','x','x','x',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x',' ',' ',' ',' ',' ',' ',' ',' ',' ','\x9C',' ',' ',' ',' ',' ',' ',' ',' ',' ','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x',' ',' ',' ',' ',' ',' ',' ','\x9C',' ','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x','x',' ','\x9C',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x',' ',' ',' ',' ',' ',' ',' ',' ','\x9C',' ','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x',' ','\x9C',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','P'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','\x9C','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ',' ',' ','\x9C',' ','x','x',' ','x','x','x','x','x','x',' ','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x',' ','x','x','x','x','x','x','\x9C','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x',' ','\x9C',' ',' ',' ',' ','x','x','x','x','x','x',' ','x','x','x','x','x','x',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ','x','x','x','x','x','x',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\x9C',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x',' ',' ',' ','\x9C',' ','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x'},
		{'x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x'}};


}
Maze::~Maze() {
	delete &maze;
}

void Maze::printMaze() {

	int x = 0;
	int y = 0;
	for (int i = 0; i < 1000; i++) {
		
		cout << maze[y][x];

		if (x == 39) {
			x = 0;
			y++;
			cout << "\n";
		}
		else { x++; }

	}

}
